/**
 * PayNow! - jQuery PayPal Plugin
 * http://plugins.gravitysign.com/paynow
 * Copyright (c) 2014 Roman Yurchuk
 * Version 1.3.1
 */

(function (a, c) {
    function b(e, d, f) {
        var g = "cmd,notify_url,bn,amount,discount_amount,discount_amount2,discount_rate,discount_rate2,discount_num,item_name,item_number,quantity,shipping,shipping2,tax,tax_rate,undefined_quantity,weight,weight_unit,on*,os*,option_index,option_select*,option_amount*,option_frequency*,option_period*,business,currency_code,a*,p*,t*,src,srt,sra,no_note,custom,invoice,modify,usr_manage,page_style,image_url,cpp_cart_border_color,cpp_header_image,cpp_headerback_color,cpp_headerborder_color,cpp_logo_image,cpp_payflow_color,lc,cn,no_shipping,return,rm,cbt,cancel_return,address1,address2,city,country,email,first_name,last_name,charset,night_phone_a,night_phone_b,night_phone_c,state,zip";
        this.button = a(e);
        this.options = d;
        this.fallback_vars = f || {};
        this.paypal_vars = this.splitVars(g);
        this.checkout_vars = null;
        this.twoclick = false;
        this.init()
    }
    b.prototype.init = function () {
        this.button.addClass("paynow-type-" + this.options.type + " paynow-style-" + this.options.style);
        window.setTimeout(a.proxy(function () {
            this.button.addClass("paynow-enable-transit")
        }, this), 30);
        if (this.options.innerHTML) {
            this.button.html(this.options.innerHTML)
        }
        if (this.options.tooltip) {
            this.addTooltip()
        }
        var e = (typeof window.ontouchend !== "undefined") ? "touchend" : "click";
        this.button.on(e, a.proxy(function (g) {
            g.preventDefault();
            if (this.options.twoClicks) {
                if (this.twoclick === false) {
                    this.twoclick = true;
                    this.button.addClass("paynow-button-active");
                    g.stopPropagation();
                    a("body").on(e + ".paynow", a.proxy(function () {
                        this.twoclick = false;
                        this.button.removeClass("paynow-button-active");
                        a("body").off(".paynow")
                    }, this));
                    return
                }
            }
            if (this.options.clickTarget && g.target !== this.button.find(this.options.clickTarget).get(0)) {
                return
            }
            if (this.button.hasClass("paynow-button-disabled")) {
                return
            }
            this.checkout_vars = this.collectAtts();
            if (typeof this.options.beforeSubmit === "function") {
                var f = this.options.beforeSubmit.call(this.button.get(0), this.checkout_vars);
                if (typeof f === "object") {
                    this.checkout_vars = f
                } else {
                    return
                }
            }
            this.submit()
        }, this));
        var d = this;
        this.api = {
            enable: function () {
                d.button.removeClass("paynow-button-disabled");
                return this
            },
            disable: function () {
                d.button.addClass("paynow-button-disabled");
                return this
            },
            setVar: function (f, g) {
                if (f.indexOf("data-") !== 0) {
                    f = "data-" + f.toLowerCase()
                }
                d.button.attr(f, g);
                return this
            }
        };
        this.button.data("paynow-api", this.api)
    };
    b.prototype.splitVars = function (f) {
        var g = f.split(",");
        for (var h = 0; h < g.length; h++) {
            var e = g[h];
            if (e.charAt(e.length - 1) === "*") {
                e = e.slice(0, -1);
                for (var d = 0; d < 10; d++) {
                    g.splice(h, (!d) & 1, e + d)
                }
            }
        }
        return g
    };
    b.prototype.collectAtts = function () {
        var e = this.fallback_vars;
        var g = this.button.data("json");
        if (typeof g === "object") {
            a.extend(e, g)
        } else {
            if (typeof g === "string") {
                if (window.console) {
                    console.log('Error: Invalid JSON string in "data-json" attribute')
                }
            }
        }
        for (var h = 0; h < this.paypal_vars.length; h++) {
            var d = this.paypal_vars[h],
                f = this.button.attr("data-" + d);
            if (f !== c && f !== "") {
                e[d] = f
            }
        }
        switch (this.options.type) {
            case "buynow":
                e.cmd = "_xclick";
                e.bn = "PayNowPlugin_BuyNow_WPS_US";
                break;
            case "subscribe":
                e.cmd = "_xclick-subscriptions";
                e.bn = "PayNowPlugin_Subscribe_WPS_US";
                break;
            case "donate":
                e.cmd = "_donations";
                e.bn = "PayNowPlugin_Donate_WPS_US";
                break;
            default:
                e.cmd = ""
        }
        return e
    };
    b.prototype.submit = function () {
        if (!this.checkout_vars.cmd || !this.checkout_vars.business) {
            return
        }
        this.form = a("<form/>");
        this.form.attr({
            action: "https://www.paypal.com/cgi-bin/webscr",
            method: "POST",
            target: this.options.checkoutTarget
        }).hide();
        for (var e in this.checkout_vars) {
            if (this.checkout_vars.hasOwnProperty(e)) {
                var d = a("<input/>");
                d.attr({
                    type: "hidden",
                    name: e,
                    value: this.checkout_vars[e]
                });
                this.form.append(d)
            }
        }
        a(document.body).append(this.form);
        if (this.options.delaySubmit) {
            this.button.addClass("paynow-submit-started");
            window.setTimeout(a.proxy(function () {
                this.form.submit().remove();
                this.button.removeClass("paynow-submit-started")
            }, this), this.options.delaySubmit)
        } else {
        	if (this.checkout_vars.requiredFieldMessage) {
                var requiredFieldValue = $('#on0').val();
                if(requiredFieldValue) {
                 var on0 = a("<input/>");
                on0.attr({
                    type: "hidden",
                    name: 'on0',
                    value: requiredFieldValue
                });
                	this.form.append(on0)
                } else {
                	var fldLabel = $('#on0label');
                	fldLabel.empty();
                    fldLabel.html(requiredFieldMessage);
                    return;
                }
            } else {
            	console.log('no required field');
            }
            this.form.submit().remove();
        }
    };
    b.prototype.addTooltip = function () {
        var d = a("#paynow-tooltip");
        if (d.length === 0) {
            d = a('<div id="paynow-tooltip"></div>').appendTo("body")
        }
        var e = this.options.tooltipTime + "ms";
        d.css({
            transitionDuration: e,
            WebkitTransitionDuration: e,
            MozTransitionDuration: e,
            OTransitionDuration: e
        });
        this.button.on("mouseenter touchstart", a.proxy(function () {
            var g = this.button.outerWidth(),
                i = this.button.outerHeight(),
                h = this.button.offset().top - a(window).scrollTop(),
                f = this.button.offset().left - a(window).scrollLeft();
            var j = (d.text(this.options.tooltip).outerWidth() - g) / 2;
            d.css({
                top: h + i + parseFloat(this.options.tooltipOffset),
                left: f - j
            }).stop(true).delay(this.options.tooltipDelay).queue(function () {
                a(this).addClass("paynow-tooltip-visible").dequeue()
            });
            if (this.options.tooltipHide) {
                d.data("timer", window.setTimeout(function () {
                    d.stop(true).removeClass("paynow-tooltip-visible")
                }, this.options.tooltipHide))
            }
        }, this));
        this.button.on("mouseleave touchend", function () {
            d.stop(true).removeClass("paynow-tooltip-visible");
            window.clearTimeout(d.data("timer"))
        })
    };
    a.fn.paynow = function (f, e) {
        var d = a.extend({
            type: "buynow",
            style: "default",
            innerHTML: "",
            clickTarget: false,
            checkoutTarget: "_self",
            delaySubmit: 0,
            twoClicks: false,
            tooltip: "",
            tooltipHide: 3000,
            tooltipTime: 300,
            tooltipDelay: 400,
            tooltipOffset: 15,
            beforeSubmit: false
        }, f);
        return this.each(function () {
            var g = new b(this, d, e)
        })
    }
})(jQuery);